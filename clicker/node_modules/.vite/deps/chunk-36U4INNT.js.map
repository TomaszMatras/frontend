{
  "version": 3,
  "sources": ["../../vuetify/src/composables/variant.tsx"],
  "sourcesContent": ["// Composables\nimport { useColor } from '@/composables/color'\n\n// Utilities\nimport { toRef, toValue } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { MaybeRefOrGetter, PropType } from 'vue'\n\nexport const allowedVariants = [\n  'elevated',\n  'flat',\n  'tonal',\n  'outlined',\n  'text',\n  'plain',\n] as const\n\nexport type Variant = typeof allowedVariants[number]\n\nexport interface VariantProps {\n  color?: string\n  variant: Variant\n}\n\nexport function genOverlays (isClickable: boolean, name: string) {\n  return (\n    <>\n      { isClickable && <span key=\"overlay\" class={ `${name}__overlay` } /> }\n\n      <span key=\"underlay\" class={ `${name}__underlay` } />\n    </>\n  )\n}\n\nexport const makeVariantProps = propsFactory({\n  color: String,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'elevated',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n}, 'variant')\n\nexport function useVariant (\n  props: MaybeRefOrGetter<VariantProps>,\n  name = getCurrentInstanceName(),\n) {\n  const variantClasses = toRef(() => {\n    const { variant } = toValue(props)\n    return `${name}--variant-${variant}`\n  })\n\n  const { colorClasses, colorStyles } = useColor(() => {\n    const { variant, color } = toValue(props)\n    return {\n      [['elevated', 'flat'].includes(variant) ? 'background' : 'text']: color,\n    }\n  })\n\n  return { colorClasses, colorStyles, variantClasses }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAUO,IAAMA,kBAAkB,CAC7B,YACA,QACA,SACA,YACA,QACA,OAAO;AAUF,SAASC,YAAaC,aAAsBC,MAAc;AAC/D,SAAAC,gBAAAC,UAAA,MAAA,CAEMH,eAAWE,gBAAA,QAAA;IAAA,OAAA;IAAA,SAAAE,eAAgC,GAAGH,IAAI,WAAW;EAAA,GAAA,IAAA,GAAKC,gBAAA,QAAA;IAAA,OAAA;IAAA,SAAAE,eAEvC,GAAGH,IAAI,YAAY;EAAA,GAAA,IAAA,CAAA,CAAA;AAGtD;AAEO,IAAMI,mBAAmBC,aAAa;EAC3CC,OAAOC;EACPC,SAAS;IACPC,MAAMF;IACNG,SAAS;IACTC,WAAYC,OAAWf,gBAAgBgB,SAASD,CAAC;EACnD;AACF,GAAG,SAAS;AAEL,SAASE,WACdC,OAEA;AAAA,MADAf,OAAIgB,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAGG,uBAAuB;AAE9B,QAAMC,iBAAiBC,MAAM,MAAM;AACjC,UAAM;MAAEb;IAAQ,IAAIc,QAAQP,KAAK;AACjC,WAAO,GAAGf,IAAI,aAAaQ,OAAO;EACpC,CAAC;AAED,QAAM;IAAEe;IAAcC;EAAY,IAAIC,SAAS,MAAM;AACnD,UAAM;MAAEjB;MAASF;IAAM,IAAIgB,QAAQP,KAAK;AACxC,WAAO;MACL,CAAC,CAAC,YAAY,MAAM,EAAEF,SAASL,OAAO,IAAI,eAAe,MAAM,GAAGF;IACpE;EACF,CAAC;AAED,SAAO;IAAEiB;IAAcC;IAAaJ;EAAe;AACrD;",
  "names": ["allowedVariants", "genOverlays", "isClickable", "name", "_createElementVNode", "_Fragment", "_normalizeClass", "makeVariantProps", "propsFactory", "color", "String", "variant", "type", "default", "validator", "v", "includes", "useVariant", "props", "arguments", "length", "undefined", "getCurrentInstanceName", "variantClasses", "toRef", "toValue", "colorClasses", "colorStyles", "useColor"]
}
